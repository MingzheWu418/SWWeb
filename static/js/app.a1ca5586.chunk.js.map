{"version":3,"sources":["App.js"],"names":["firebase","default","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","updateFreq","firstMonId","secondMonId","newFirstFreq","newSecondFreq","updates","newFreqData","firstFreq","secondFreq","ref","update","App","props","state","firstMonImg","firstMonName","firstMonFreq","secondMonImg","secondMonName","secondMonFreq","numMon","allMonPage","monsterPage","this","setState","url","invalidFamily","invalidIndividuals","firstRandNum","Math","floor","random","secondRandNum","fetch","then","response","json","data","indexOf","results","family_id","com2us_id","freq","firstFreqCount","secondFreqCount","on","frequency","getFreq","s","JSON","stringify","d","parse","firstMon","secondMon","image_filename","name","updateMonster","style","styles","container","imageContainer","onPress","incFirstFreq","fadeDuration","source","uri","width","height","incSecondFreq","title","color","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection"],"mappings":"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","file":"static/js/app.a1ca5586.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, TouchableNativeFeedback, TouchableHighlight, Button } from 'react-native';\nimport firebase from '@firebase/app';\nimport \"@firebase/database\";\n\n// import database from \"firebase\";\n\n// var firebase = require(\"firebase/app\");\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCs5AfLDY0g9306B1yp7W1DzDj2wJkhwqo\",\n    authDomain: \"swweb-f7b67.firebaseapp.com\",\n    databaseURL: \"https://swweb-f7b67.firebaseio.com\",\n    projectId: \"swweb-f7b67\",\n    storageBucket: \"swweb-f7b67.appspot.com\",\n    messagingSenderId: \"624196455015\",\n    appId: \"1:624196455015:web:a6b40fdb25701eb7a7a2c2\",\n    measurementId: \"G-549CBLCS3L\"\n  };\n  // Initialize Firebase\n// if (!firebase.apps.length) {\n// var firebase.initializeApp(firebaseConfig);\n// }\n\n\nfirebase.default.initializeApp(firebaseConfig);\nlet db = firebase.default.database();\n\nfunction testUpdateFreq(newFreq){\n  return newFreq;\n}\n//\n// function writeMonsterData(com2us_id, name, imgUrl) {\n//   firebase.database().ref('Monsters/' + com2us_id).set({\n//     name: name,\n//     imgUrl : imgUrl\n//   });\n// }\n//\n// function writeSecondMon(firstMon){\n//   firebase.database().ref('Monsters/results/' + firstMon).set({\n//     secondMon: Array.from(Array(97).keys()),\n//   });\n// }\n\nfunction getFreq(firstMonId, secondMonId){\n    var firstFreq = 0;\n    var secondFreq = 0;\n    if(firstMonId < secondMonId){\n      var firstFreqCount = firebase.database().ref('/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId + '/firstFreq/');\n      var secondFreqCount = firebase.database().ref('/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId + '/secondFreq/');\n      firstFreqCount.on('value', function(frequency) {\n        // alert(JSON.stringify(frequency))\n        firstFreq = frequency;\n        // secondFreq = frequency.secondFreq;\n      });\n      secondFreqCount.on('value', function(frequency) {\n        // alert(JSON.stringify(frequency))\n        secondFreq = frequency;\n        // secondFreq = frequency.secondFreq;\n      });\n    }\n    else if(firstMonId > secondMonId){\n      var firstFreqCount = firebase.database().ref('/Monsters/results/' + secondMonId + '/secondMon/' + firstMonId + '/firstFreq/');\n      var secondFreqCount = firebase.database().ref('/Monsters/results/' + secondMonId + '/secondMon/' + firstMonId + '/secondFreq/');\n      firstFreqCount.on('value', function(frequency) {\n        // alert(JSON.stringify(frequency))\n        secondFreq = frequency;\n        // secondFreq = frequency.secondFreq;\n      });\n      secondFreqCount.on('value', function(frequency) {\n        // alert(JSON.stringify(frequency))\n        firstFreq = frequency;\n        // secondFreq = frequency.secondFreq;\n      });\n    }\n    // alert(JSON.stringify(firstFreq.val()+ \", \"+ secondFreq.val()))\n\n    return [firstFreq, secondFreq];\n    // alert(JSON.stringify(currFreq))\n}\n\nfunction updateFreq(firstMonId, secondMonId, newFirstFreq, newSecondFreq){\n  // alert(newFirstFreq, newSecondFreq)\n  var updates = {};\n  if(firstMonId < secondMonId){\n    var newFreqData = {\n      firstFreq: newFirstFreq,\n      secondFreq: newSecondFreq\n    }\n    updates['/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId] = newFreqData;\n    // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\n  }\n  else if(firstMonId > secondMonId){\n    var newFreqData = {\n      firstFreq: newSecondFreq,\n      secondFreq: newFirstFreq\n    }\n    updates['/Monsters/results/' + secondMonId + '/secondMon/' + firstMonId] = newFreqData;\n    // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\n  }\n  // alert(JSON.stringify(updates));\n  firebase.database().ref().update(updates);\n}\n\nfunction writeSecondMon(firstMonId, secondMonId, firstMonFreq, secondMonFreq) {\n  // A post entry.\n  var secondMonData = {\n    firstFreq: firstMonFreq,\n    secondFreq: secondMonFreq\n  };\n\n  // Get a key for a new Post.\n  // var newPostKey = firebase.database().ref().child('posts').push().key;\n\n  // Write the new post's data simultaneously in the posts list and the user's post list.\n  var updates = {};\n  updates['/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId] = secondMonData;\n  // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\n  if(firstMonId<secondMonId){\n    return firebase.database().ref().update(updates);\n  }\n  else{\n    return;\n    // return firebase.database().ref('/Monsters/results/' + firstMonId + '/secondMon/' + id).remove();\n  }\n}\n\n\n// let db = firebase.firestore();\n\nclass App extends React.Component {\n    constructor(props){\n    super(props);\n    this.state = {\n      firstMonId : \"\",\n      firstMonImg : \"\",\n      firstMonName : \"\",\n      firstMonFreq : 0,\n      secondMonId : \"\",\n      secondMonImg : \"\",\n      secondMonName : \"\",\n      secondMonFreq : 0,\n      numMon : 97,\n      allMonPage : \"https://swarfarm.com/api/bestiary\",\n      monsterPage : \"https://swarfarm.com/api/v2/monsters/?id__in=&com2us_id=&family_id=&base_stars=6&base_stars__lte=&base_stars__gte=&natural_stars=5&natural_stars__lte=&natural_stars__gte=&obtainable=&fusion_food=&homunculus=false&name=&element=pure&element=fire&element=wind&element=water&awaken_level=1&order_by=\"\n\n      // url : \"\"\n    }\n  }\n    //TODO: Fetch from database\n\n    incFirstFreq(){\n      // alert(\"TouchableTouched\");\n      this.setState({firstMonFreq : this.state.firstMonFreq+1})\n      // alert(this.state.firstMonFreq)\n      updateFreq(this.state.firstMonId, this.state.secondMonId, this.state.firstMonFreq+1, this.state.secondMonFreq);\n    }\n\n    incSecondFreq(){\n      this.setState({secondMonFreq : this.state.secondMonFreq+1})\n      updateFreq(this.state.firstMonId, this.state.secondMonId, this.state.firstMonFreq, this.state.secondMonFreq+1);\n    }\n\n    // setInitFreq(firstRandNum, secondRandNum){\n    //   var freq = getFreq(firstRandNum, secondRandNum)\n            // alert(freq)\n      // if(firstRandNum < secondRandNum){\n      //   this.setState({firstMonFreq: freq[0], secondMonFreq: freq[1]});\n      // }\n      // else{\n      //   this.setState({firstMonFreq: freq[1], secondMonFreq: freq[0]});\n      //   // alert(this.state.firstMonFreq)\n      // }\n    // }\n\n    updateMonster(numMon, url){\n      const invalidFamily = [19200, 17100, 24600, 23600, 24100, 24200, 24000];\n      const invalidIndividuals = [13813, 14511, 21212, 22612];\n      //TODO: store back into database\n      // this.setState({firstMonFreq: 0, secondMonFreq: 0})\n      var firstRandNum = Math.floor(Math.random() * numMon);\n      var secondRandNum = Math.floor(Math.random() * numMon);\n      // var firstRandNum = 75;\n      // var secondRandNum = 91;\n      while(secondRandNum == firstRandNum){\n        secondRandNum = Math.floor(Math.random() * numMon);\n      }\n\n      // GetInitialFrequency\n      // if(firstRandNum < secondRandNum){\n      //   this.setState({firstMonFreq: freq[0], secondMonFreq: freq[1]});\n      // }\n      // else{\n      //   this.setState({firstMonFreq: freq[1], secondMonFreq: freq[0]});\n      //   // alert(this.state.firstMonFreq)\n      // }\n      // alert(this.state.firstMonFreq)\n      // alert(this.state.secondMonFreq)\n\n\n      //TODO: Use database instead of url\n      fetch(this.state.monsterPage)\n        .then(response => response.json())\n        .then(data => {\n          while((invalidFamily.indexOf(data.results[firstRandNum].family_id) != -1) || (invalidIndividuals.indexOf(data.results[firstRandNum].com2us_id) != -1) ){\n            firstRandNum = Math.floor(Math.random() * numMon);\n          }\n          while((invalidFamily.indexOf(data.results[secondRandNum].family_id) != -1) || (invalidIndividuals.indexOf(data.results[secondRandNum].com2us_id) != -1) ){\n            secondRandNum = Math.floor(Math.random() * numMon);\n          }\n\n          var freq = getFreq(firstRandNum, secondRandNum);\n          var s = JSON.stringify(freq);\n          var d = JSON.parse(s);\n          if(firstRandNum < secondRandNum){\n            this.setState({firstMonFreq : d[0], secondMonFreq: d[1]})\n\n          }\n          else{\n            this.setState({firstMonFreq : d[1], secondMonFreq: d[0]})\n\n          }\n          // alert(JSON.stringify(freq[0]))\n          var firstMon = data.results[firstRandNum]\n          var secondMon = data.results[secondRandNum]\n          this.setState({\n            firstMonId: firstRandNum,\n            firstMonImg: firstMon.image_filename,\n            firstMonName: firstMon.name,\n            secondMonId: secondRandNum,\n            secondMonImg: secondMon.image_filename,\n            secondMonName: secondMon.name\n          });\n          // writeMonsterData(this.state.firstMonID, this.state.firstMonName, this.state.firstMonImg);\n          // alert(randNum)\n        });\n        // alert(\"firstRandNum : \" + firstRandNum);\n        // alert(\"secondRandNum : \" + secondRandNum);\n      }\n\n\n  componentDidMount() {\n    // getFreq(0, 1);\n    // update secondMonID\n    // for(var i = 0; i < 97; i++){\n    //   for(var j = 0; j < 97; j++){\n    //     writeSecondMon(i,j,0,0);\n    //   }\n    // }\n    // var ref = firebase.database().ref();\n    // ref.on(\"value\", function(snapshot) {\n    //   alert(snapshot.val());\n    // }, function (error) {\n    //   alert(\"Error: \" + error.code);\n    // });\n\n    this.updateMonster(this.state.numMon, this.state.monsterPage);\n    // alert(this.state.firstMonFreq)\n  }\n\n\n  render(){\n\n    const {numMon, monsterPage, firstMonFreq, secondMonFreq} = this.state;\n\n    return (\n      <View style={styles.container}>\n        <View style = {styles.imageContainer}>\n        <TouchableHighlight\n          onPress = {()=>{this.incFirstFreq()}}>\n          <Image\n            fadeDuration = {1000}\n            source={{\n              uri: \"https://swarfarm.com/static/herders/images/monsters/\" + this.state.firstMonImg,\n            }}\n            style={{ width: 128, height: 128 }}/>\n          </TouchableHighlight>\n        <Text> vs. </Text>\n        <TouchableHighlight\n          onPress = {()=>{this.incSecondFreq()}}>\n          <Image\n            fadeDuration = {1000}\n            source={{\n              uri: \"https://swarfarm.com/static/herders/images/monsters/\" + this.state.secondMonImg,\n            }}\n            style={{ width: 128, height: 128 }}/>\n          </TouchableHighlight>\n        </View>\n        <View style = {styles.imageContainer}>\n          <Text>{firstMonFreq}</Text>\n          <Text> vs. </Text>\n          <Text>{secondMonFreq}</Text>\n        </View>\n        <Button\n          onPress = {() => {this.updateMonster(numMon, monsterPage)}}\n          title = \"Show Me Two Other Monsters!\"\n          color = '#DB8E71'\n          />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  imageContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n});\n\nexport default App;\n"],"sourceRoot":""}