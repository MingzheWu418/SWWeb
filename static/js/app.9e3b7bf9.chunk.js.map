{"version":3,"sources":["App.js"],"names":["firebase","default","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","updateFreq","firstMonId","secondMonId","newFirstFreq","newSecondFreq","updates","newFreqData","firstFreq","secondFreq","ref","update","App","props","state","firstMonImg","firstMonName","firstMonFreq","secondMonImg","secondMonName","secondMonFreq","numMon","allMonPage","monsterPage","pressed","this","setState","url","invalidFamily","invalidIndividuals","firstRandNum","Math","floor","random","secondRandNum","fetch","then","response","json","data","indexOf","results","family_id","com2us_id","freq","firstFreqCount","secondFreqCount","on","frequency","getFreq","s","JSON","stringify","d","parse","firstMon","secondMon","image_filename","name","updateMonster","firstMonPercentage","secondMonPercentage","toFixed","style","styles","container","comparisonContainer","monsterContainer","onPress","incFirstFreq","fadeDuration","source","uri","width","height","incSecondFreq","title","color","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection"],"mappings":"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","file":"static/js/app.9e3b7bf9.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image, TouchableNativeFeedback, TouchableHighlight, Button } from 'react-native';\nimport firebase from '@firebase/app';\nimport \"@firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCs5AfLDY0g9306B1yp7W1DzDj2wJkhwqo\",\n    authDomain: \"swweb-f7b67.firebaseapp.com\",\n    databaseURL: \"https://swweb-f7b67.firebaseio.com\",\n    projectId: \"swweb-f7b67\",\n    storageBucket: \"swweb-f7b67.appspot.com\",\n    messagingSenderId: \"624196455015\",\n    appId: \"1:624196455015:web:a6b40fdb25701eb7a7a2c2\",\n    measurementId: \"G-549CBLCS3L\"\n  };\n\n  // Initialize Firebase\nfirebase.default.initializeApp(firebaseConfig);\nlet db = firebase.default.database();\n\n//\n// function writeMonsterData(com2us_id, name, imgUrl) {\n//   firebase.database().ref('Monsters/' + com2us_id).set({\n//     name: name,\n//     imgUrl : imgUrl\n//   });\n// }\n//\n// function writeSecondMon(firstMon){\n//   firebase.database().ref('Monsters/results/' + firstMon).set({\n//     secondMon: Array.from(Array(97).keys()),\n//   });\n// }\n\n// function updateClick(){\n//   var updates = {};\n//   var newClicks = 0;\n//   var clickUpdater = firebase.database().ref('/totalClicks');\n//   clickUpdater.on('value', function(clicks){\n//\n//     // alert(JSON.stringify(clicks));\n//     newClicks = JSON.stringify(clicks)\n//   });\n//   updates['/totalClicks'] = newClicks;\n//   firebase.database().ref().update(updates);\n//   alert(newClicks)\n//   return newClicks;\n// }\n\n\nfunction getFreq(firstMonId, secondMonId){\n    var firstFreq = 0;\n    var secondFreq = 0;\n    if(firstMonId < secondMonId){\n      var firstFreqCount = firebase.database().ref('/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId + '/firstFreq/');\n      var secondFreqCount = firebase.database().ref('/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId + '/secondFreq/');\n      firstFreqCount.on('value', function(frequency) {\n        firstFreq = frequency;\n      });\n      secondFreqCount.on('value', function(frequency) {\n        secondFreq = frequency;\n      });\n    }\n    else if(firstMonId > secondMonId){\n      var firstFreqCount = firebase.database().ref('/Monsters/results/' + secondMonId + '/secondMon/' + firstMonId + '/firstFreq/');\n      var secondFreqCount = firebase.database().ref('/Monsters/results/' + secondMonId + '/secondMon/' + firstMonId + '/secondFreq/');\n      firstFreqCount.on('value', function(frequency) {\n        secondFreq = frequency;\n      });\n      secondFreqCount.on('value', function(frequency) {\n        firstFreq = frequency;\n      });\n    }\n\n    return [firstFreq, secondFreq];\n}\n\nfunction updateFreq(firstMonId, secondMonId, newFirstFreq, newSecondFreq){\n  // alert(newFirstFreq, newSecondFreq)\n  var updates = {};\n  if(firstMonId < secondMonId){\n    var newFreqData = {\n      firstFreq: newFirstFreq,\n      secondFreq: newSecondFreq\n    }\n    updates['/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId] = newFreqData;\n  }\n  else if(firstMonId > secondMonId){\n    var newFreqData = {\n      firstFreq: newSecondFreq,\n      secondFreq: newFirstFreq\n    }\n    updates['/Monsters/results/' + secondMonId + '/secondMon/' + firstMonId] = newFreqData;\n  }\n  firebase.database().ref().update(updates);\n}\n\nfunction writeSecondMon(firstMonId, secondMonId, firstMonFreq, secondMonFreq) {\n  // A post entry.\n  var secondMonData = {\n    firstFreq: firstMonFreq,\n    secondFreq: secondMonFreq\n  };\n\n  // Write the new post's data simultaneously in the posts list and the user's post list.\n  var updates = {};\n  updates['/Monsters/results/' + firstMonId + '/secondMon/' + secondMonId] = secondMonData;\n  // updates['/user-posts/' + uid + '/' + newPostKey] = postData;\n  if(firstMonId < secondMonId){\n    return firebase.database().ref().update(updates);\n  }\n  else{\n    return;\n    // return firebase.database().ref('/Monsters/results/' + firstMonId + '/secondMon/' + id).remove();\n  }\n}\n\n\nclass App extends React.Component {\n    constructor(props){\n    super(props);\n    this.state = {\n      firstMonId : \"\",\n      firstMonImg : \"\",\n      firstMonName : \"\",\n      firstMonFreq : 0,\n      secondMonId : \"\",\n      secondMonImg : \"\",\n      secondMonName : \"\",\n      secondMonFreq : 0,\n      numMon : 97,\n      allMonPage : \"https://swarfarm.com/api/bestiary\",\n      monsterPage : \"https://swarfarm.com/api/v2/monsters/?id__in=&com2us_id=&family_id=&base_stars=6&base_stars__lte=&base_stars__gte=&natural_stars=5&natural_stars__lte=&natural_stars__gte=&obtainable=&fusion_food=&homunculus=false&name=&element=pure&element=fire&element=wind&element=water&awaken_level=1&order_by=\",\n      pressed : false\n    }\n  }\n\n    incFirstFreq(){\n      // alert(\"TouchableTouched\");\n      if(!this.state.pressed){\n\n        this.setState({pressed: true, firstMonFreq : this.state.firstMonFreq+1})\n      // alert(this.state.firstMonFreq)\n        updateFreq(this.state.firstMonId, this.state.secondMonId, this.state.firstMonFreq+1, this.state.secondMonFreq);\n\n\n      }\n    }\n\n    incSecondFreq(){\n\n      if(!this.state.pressed){\n        this.setState({pressed: true, secondMonFreq : this.state.secondMonFreq+1})\n        updateFreq(this.state.firstMonId, this.state.secondMonId, this.state.firstMonFreq, this.state.secondMonFreq+1);\n      }\n    }\n\n    updateMonster(numMon, url){\n      this.setState({pressed : false});\n      const invalidFamily = [19200, 17100, 24600, 23600, 24100, 24200, 24000];\n      const invalidIndividuals = [13813, 14511, 21212, 22612];\n      //TODO: store back into database\n      var firstRandNum = Math.floor(Math.random() * numMon);\n      var secondRandNum = Math.floor(Math.random() * numMon);\n      // var firstRandNum = 75;\n      // var secondRandNum = 91;\n      while(secondRandNum == firstRandNum){\n        secondRandNum = Math.floor(Math.random() * numMon);\n      }\n\n\n      //TODO: Use database instead of url\n      fetch(this.state.monsterPage)\n        .then(response => response.json())\n        .then(data => {\n          while((invalidFamily.indexOf(data.results[firstRandNum].family_id) != -1) || (invalidIndividuals.indexOf(data.results[firstRandNum].com2us_id) != -1) ){\n            firstRandNum = Math.floor(Math.random() * numMon);\n          }\n          while((invalidFamily.indexOf(data.results[secondRandNum].family_id) != -1) || (invalidIndividuals.indexOf(data.results[secondRandNum].com2us_id) != -1) ){\n            secondRandNum = Math.floor(Math.random() * numMon);\n          }\n\n          var freq = getFreq(firstRandNum, secondRandNum);\n          var s = JSON.stringify(freq);\n          var d = JSON.parse(s);\n          if(firstRandNum < secondRandNum){\n            this.setState({firstMonFreq : d[0], secondMonFreq: d[1]})\n\n          }\n          else{\n            this.setState({firstMonFreq : d[1], secondMonFreq: d[0]})\n\n          }\n          var firstMon = data.results[firstRandNum]\n          var secondMon = data.results[secondRandNum]\n          this.setState({\n            firstMonId: firstRandNum,\n            firstMonImg: firstMon.image_filename,\n            firstMonName: firstMon.name,\n            secondMonId: secondRandNum,\n            secondMonImg: secondMon.image_filename,\n            secondMonName: secondMon.name\n          });\n        });\n      }\n\n\n  componentDidMount() {\n    // updateClick();\n    // for(var i = 0; i < 97; i++){\n    //   for(var j = 0; j < 97; j++){\n    //     writeSecondMon(i, j, 0, 0);\n    //   }\n    // }\n    this.updateMonster(this.state.numMon, this.state.monsterPage);\n  }\n\n\n  render(){\n    const {numMon, monsterPage, firstMonFreq, secondMonFreq} = this.state;\n\n    var firstMonPercentage = 0;\n    var secondMonPercentage = 0;\n\n    if(firstMonFreq+secondMonFreq!=0){\n      firstMonPercentage = (firstMonFreq/(firstMonFreq+secondMonFreq)*100).toFixed(2);\n      secondMonPercentage = (secondMonFreq/(firstMonFreq+secondMonFreq)*100).toFixed(2);\n    }\n\n    return (\n      <View style={styles.container}>\n        <View style = {styles.comparisonContainer}>\n          <View style = {styles.monsterContainer}>\n\n          <TouchableHighlight\n            onPress = {()=>{this.incFirstFreq()}}>\n            <Image\n              fadeDuration = {1000}\n              source={{\n                uri: \"https://swarfarm.com/static/herders/images/monsters/\" + this.state.firstMonImg,\n              }}\n              style={{ width: 128, height: 128 }}/>\n            </TouchableHighlight>\n            <Text>{firstMonPercentage} %</Text>\n          </View>\n\n          <Text> vs. </Text>\n\n          <View style = {styles.monsterContainer}>\n\n            <TouchableHighlight\n              onPress = {()=>{this.incSecondFreq()}}>\n                <Image\n                fadeDuration = {1000}\n                source={{\n                  uri: \"https://swarfarm.com/static/herders/images/monsters/\" + this.state.secondMonImg,\n                }}\n                style={{ width: 128, height: 128 }}/>\n            </TouchableHighlight>\n            <Text>{secondMonPercentage} %</Text>\n\n          </View>\n        </View>\n        <View style = {styles.comparisonContainer}>\n          <Text>{firstMonFreq}</Text>\n          <Text> vs. </Text>\n          <Text>{secondMonFreq}</Text>\n        </View>\n        <Button\n          onPress = {() => {this.updateMonster(numMon, monsterPage)}}\n          title = \"Show Me Two Other Monsters!\"\n          color = '#DB8E71'\n          />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  comparisonContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n\n  monsterContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n});\n\nexport default App;\n"],"sourceRoot":""}